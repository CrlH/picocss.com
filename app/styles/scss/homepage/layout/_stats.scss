@use "sass:map";
@use "settings" as *;

body > main > .stats {
  position: relative;
  margin-top: calc(var(#{$css-var-prefix}homepage-spacing-vertical) / 2);

  ul li {
    margin: 0;
    list-style-type: none;
  }

  ul {
    display: grid;
    z-index: 1;
    position: relative;
    column-gap: calc(var(#{$css-var-prefix}spacing) * 2);
    row-gap: calc(var(#{$css-var-prefix}spacing) * 2);
    max-width: map.get(map.get($breakpoints, "md"), "viewport");
    margin: 0 auto;
    padding: 0;

    @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
      grid-template-columns: repeat(3, 1fr);
    }

    @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
      grid-template-columns: repeat(3, auto);
      column-gap: calc(var(#{$css-var-prefix}spacing) * 4);
      width: fit-content;
      max-width: none;
      margin-left: 0;
    }
  }

  ul li {
    @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
      text-align: center;

      @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
        text-align: left;
      }
    }

    p.count {
      margin-bottom: calc(var(#{$css-var-prefix}spacing) * 0.25);
      color: var(#{$css-var-prefix}stats-color);
      font-size: 1.75rem;
      line-height: 1.15;
      font-family: "Figtree", var(#{$css-var-prefix}font-family);
    }

    p.label {
      margin: 0;

      a {
        text-decoration: none;

        svg {
          display: inline-block;
          width: auto;
          height: 1em;
          margin-right: calc(var(#{$css-var-prefix}spacing) * 0.375);
          transform: translateY(-0.125em);
          color: var(#{$css-var-prefix}h1-color);
        }

        span.period-prefix {
          @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
            display: none;
          }

          @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
            display: inline;
          }
        }
      }
    }

    p.period-suffix {
      display: none;
      color: var(#{$css-var-prefix}muted-color);

      @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
        display: block;
      }

      @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
        display: none;
      }
    }
  }

  .background {
    display: flex;
    z-index: -1;
    position: absolute;
    align-items: center;
    justify-content: center;
    inset: 0;

    @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
      justify-content: flex-start;
    }

    &::after {
      display: block;
      aspect-ratio: 1 / 1;
      height: 100%;
      inset: 0 auto;
      transform: scale(3);
      border-radius: 50%;
      background: var(#{$css-var-prefix}stats-background-gradient);
      content: "";
      opacity: 0.5;

      @media (min-width: map.get(map.get($breakpoints, "sm"), "breakpoint")) {
        transform: scale(4);
      }

      @media (min-width: map.get(map.get($breakpoints, "md"), "breakpoint")) {
        transform: scale(10);
      }

      @media (min-width: map.get(map.get($breakpoints, "xl"), "breakpoint")) {
        transform: scale(16);
        opacity: 1;
      }
    }
  }
}
