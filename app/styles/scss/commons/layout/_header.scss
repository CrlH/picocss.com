@use "sass:map";
@use "colors" as *;
@use "settings" as *;

/**
 * Header
 */

html {
  #{$✨}header-height: calc(4.5rem + var(#{$✨}border-width));
}

body {
  > header {
    z-index: 4;
    position: relative;
    padding: 0.5rem 0;
    border-bottom: var(#{$✨}border-width) solid var(#{$✨}header-border-color);
    backdrop-filter: blur(1rem);
    background-color: var(#{$✨}header-background);
    box-shadow: var(#{$✨}card-box-shadow);

    .container {
      display: flex;
      align-items: center;
      justify-content: space-between;

      > a {
        margin: calc(var(#{$✨}spacing) * -0.125) calc(var(#{$✨}spacing) * -0.25);
        padding: calc(var(#{$✨}spacing) * 0.125) calc(var(#{$✨}spacing) * 0.25);
        border-radius: var(#{$✨}border-radius);

        svg.pico-logo {
          transform: translateY(-10%);
        }
      }

      nav {
        svg {
          display: inline-block;
          width: 1rem;
          height: 1rem;
          transform: translateY(-0.0625rem);

          &.theme-toggle {
            transform: scale(1.125) translateY(-0.0625rem);
          }
        }

        // Hide docs link on mobile
        li.hide-before-sm {
          @media (max-width: calc(#{map.get(map.get($breakpoints, "sm"), "breakpoint")} - 1px)) {
            display: none;
          }
        }

        // Dropdown menu
        details[class="dropdown"] {
          margin: calc(var(#{$✨}nav-element-spacing-vertical) * -1)
            calc(var(#{$✨}nav-element-spacing-horizontal) * -1);

          &:not(:focus-within) summary,
          summary:not(:hover, :focus, :focus-visible) {
            border-color: transparent;
            background-color: transparent;
          }

          summary {
            &:hover,
            &:focus,
            &:focus-visible {
              color: var(#{$✨}secondary-hover);
            }

            &:focus {
              border: var(#{$✨}border-width) solid var(#{$✨}dropdown-border-color);
              box-shadow: none;
            }

            &:focus-visible {
              box-shadow: 0 0 0 var(#{$✨}outline-width) var(#{$✨}primary-focus);
            }

            &::after {
              transform: rotate(0) translate(0.2rem) translateY(0.0625rem);
            }
          }

          ul {
            li {
              a {
                svg {
                  stroke: var(#{$✨}current-version-checkmark);
                  margin-left: 0.25rem;
                  transform: scale(0.75);
                }
              }
            }
          }
        }
      }
    }

    // Fixed header
    &.is-fixed-above-lg {
      @media (min-width: map.get(map.get($breakpoints, "lg"), "breakpoint")) {
        z-index: 2;
        position: sticky;
        top: 0;
      }
    }
  }
}
